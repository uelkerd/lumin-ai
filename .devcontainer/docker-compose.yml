# LUMIN.AI Development Environment - Minimal Version
# Simplified Docker Compose configuration for stable development setup

version: '3.8'

services:
  # Main development environment container
  lumin-dev-environment:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PYTHON_VERSION: "3.11"
        NODE_VERSION: "18"
        USERNAME: "lumin-dev"

    container_name: lumin-ai-dev
    command: sleep infinity

    # Volume mounts for persistent development
    volumes:
      # Project source code
      - ../:/workspace:cached
      # Persistent Python package cache
      - lumin-python-packages:/home/lumin-dev/.cache/pip

    # Essential ports only
    ports:
      - "3000:3000"   # React development server
      - "8000:8000"   # FastAPI/Flask services
      - "8888:8888"   # Jupyter notebook server

    # Environment variables for development configuration
    environment:
      - PYTHONPATH=/workspace
      - PYTHONUNBUFFERED=1
      - NODE_ENV=development
      - MONGO_USERNAME=lumin
      - MONGO_PASSWORD=dummy_password # pragma: allowlist secret
      - MONGO_DB_NAME=governance_analysis
      - DATABASE_URL=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@governance-db:27017/${MONGO_DB_NAME}

    networks:
      - lumin-network

    depends_on:
      - governance-db

  # MongoDB database
  governance-db:
    image: mongo:7.0
    container_name: lumin-governance-db

    environment:
      - MONGO_USERNAME=lumin
      - MONGO_PASSWORD=dummy_password # pragma: allowlist secret
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=governance_analysis

    volumes:
      - lumin-mongodb-data:/data/db
      - ./init-mongodb.js:/docker-entrypoint-initdb.d/init-mongodb.js:ro
      - ./mongodb-setup.sh:/docker-entrypoint-initdb.d/mongodb-setup.sh:ro

    ports:
      - "27017:27017"

    networks:
      - lumin-network

# Minimal set of volumes
volumes:
  lumin-python-packages:
    driver: local
  lumin-mongodb-data:
    driver: local

# Network for inter-service communication
networks:
  lumin-network:
    driver: bridge
    name: lumin-ai-network
