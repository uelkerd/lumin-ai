# LUMIN.AI Development Environment - Minimal Version
# Simplified Docker Compose configuration for stable development setup

services:
  # Main development environment container
  lumin-dev-environment:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PYTHON_VERSION: "3.11"
        NODE_VERSION: "18"
        USERNAME: "lumin-dev"

    container_name: lumin-ai-dev
    command: sleep infinity

    # Volume mounts for persistent development
    volumes:
      # Project source code
      - ../:/workspace:cached
      # Persistent Python package cache
      - lumin-python-packages:/home/lumin-dev/.cache/pip

    # Essential ports only
    ports:
      - "3000:3000"   # React development server
      - "8000:8000"   # FastAPI/Flask service
      - "9000:9000"   # Jupyter notebook
      - "27017:27017" # MongoDB (for direct access if needed)

    # Environment variables
    env_file:
      - .env

    # Configure network for service communication
    networks:
      - lumin-network

  # MongoDB service for data storage
  governance-db:
    image: mongo:6.0
    container_name: lumin-governance-db
    restart: unless-stopped

    # Store data outside container for persistence
    volumes:
      - governance-data:/data/db
      - ./init-mongodb.js:/docker-entrypoint-initdb.d/init-mongodb.js:ro

    # Environment variables for DB setup
    env_file:
      - .env

    # Configure network
    networks:
      - lumin-network

# Persistent volumes
volumes:
  governance-data:
  lumin-python-packages:

# Network for container communication
networks:
  lumin-network:
    driver: bridge
