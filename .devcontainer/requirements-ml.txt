# Deep Learning Track Requirements for LUMIN.AI
# These packages support neural network development for governance sentiment analysis
# and voting pattern recognition using transformer models and graph neural networks

# Machine Learning Core Dependencies - Minimal Stable Version
# Only the most essential ML packages to minimize conflicts

# ðŸ¤– CORE ML PACKAGES - Compatible Versions
tensorflow==2.13.0
tensorboard==2.13.0
torch==2.7.1
torchvision==0.15.2
torchaudio==2.0.2
scikit-learn==1.5.0
xgboost==1.7.6
lightgbm==4.6.0

# ðŸ”„ TRANSFORMER MODELS & NLP
transformers==4.50.0
datasets==2.14.4
evaluate==0.4.0
accelerate==0.21.0
sentence-transformers==2.2.2
spacy==3.6.1

# ðŸ“Š MLOPS & EXPERIMENT TRACKING
mlflow==3.1.0
wandb==0.15.8
optuna==3.4.0

# ðŸš€ MODEL SERVING
fastapi==0.101.1
uvicorn==0.23.2

# ðŸ“ˆ SPECIALIZED LIBRARIES
torch-geometric==2.4.0
networkx==3.2.1
pytorch-lightning==2.4.0
torchmetrics==1.2.0

# ðŸ”§ DEPLOYMENT & OPTIMIZATION
onnx==1.17.0
onnxruntime==1.16.1
tsfresh==0.20.1

# Core numerical computing
numpy==1.24.3

# Statistical analysis
scipy==1.11.2

# Basic visualization
matplotlib==3.7.2

# Essential utilities
joblib==1.3.2
requests==2.32.4

# Note: Removed TensorBoard as it's included with TensorFlow
# Note: Removed heavy optional packages to reduce conflicts

# PyTorch ecosystem (compatible with torch 2.0.1)
torchvision==0.15.2  # Compatible with torch 2.0.1
torchaudio==2.0.2     # Compatible with torch 2.0.1

# Basic transformers (lighter version)
tokenizers==0.14.1

# Basic NLP
textblob==0.17.1
langdetect==1.0.9

# Essential monitoring (compatible with PyTorch)
# Note: TensorBoard can be installed separately if needed for PyTorch
# pip install tensorboard

# Advanced ML (uncomment if needed for project)
transformers==4.50.0
spacy==3.6.1

# Core Deep Learning Framework
torchvision==0.16.0            # Computer vision utilities (useful for visualization)
torchaudio==2.1.0              # Audio processing (if governance data includes speeches)

# Specialized NLP Libraries for Political Science
spacy==3.7.2                   # Advanced natural language processing
spacy-transformers==1.3.4     # SpaCy integration with transformer models

# Graph Neural Networks for Voting Pattern Analysis
torch-geometric==2.4.0        # Graph neural network framework
networkx==3.2.1               # Graph creation and analysis for voting patterns

# Model Training and Evaluation
pytorch-lightning==2.4.0      # Structured training framework
torchmetrics==1.2.0          # Comprehensive metrics for model evaluation
wandb==0.15.8                # Experiment tracking and visualization

# Advanced Optimization and Regularization
optuna==3.4.0                 # Hyperparameter optimization
transformers[torch]           # Additional PyTorch integrations
sentence-transformers==2.2.2  # Semantic similarity for governance text

# Model Serving and Deployment
onnx==1.17.0                  # Model format for deployment optimization
onnxruntime==1.16.1          # Efficient model inference

# Time Series Analysis for Voting Patterns
tsfresh==0.20.1               # Time series feature extraction

# Model serving
fastapi==0.101.1
uvicorn==0.23.2
